Brute Force-> using 2nested loops, finding max of profit (diff of prices), return max

Code:
int maxProfit(vector<int>& prices) {
        //brute force
        // int n = prices.size();
        // int profit = 0;
        // int maxi = 0;
        // for(int i = 0; i <n; i++){
        //     for(int j = i + 1; j < n; j++){
        //         if(prices[i] >= prices[j]){
        //             break;
        //         }
        //         else
        //         {
        //             profit = prices[j] - prices[i];
        //             maxi = max(maxi, profit);
        //         }

        //     }
        // }

        // return maxi;
        
        int n = prices.size();
        vector<int> maxPrice(n,0);
        maxPrice[n - 1] = prices[n - 1];
        for(int i = n - 2; i >= 0; i--){
            maxPrice[i] = max(maxPrice[i + 1], prices[i]);
        }

        int maxProfit = 0;
        for(int i = 0; i < n; i++){
            maxProfit = max(maxProfit, maxPrice[i] - prices[i]);
        }

        return maxProfit;
        
    }