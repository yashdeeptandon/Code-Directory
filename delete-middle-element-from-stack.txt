#include <bits/stdc++.h> 
void deleteMiddle(stack<int>&inputStack, int N){
	
   // Write your code here
   vector<int> v;

   for(int i = 0; i <= N; i++){
      if(i != N/2){
         v.push_back(inputStack.top());
      }
      inputStack.pop();
   }
   
   reverse(v.begin(), v.end());

   for(int i = 0; i < v.size(); i++){
      inputStack.push(v[i]);
   }

}

using recursion

#include <bits/stdc++.h> 

void solve(stack<int>&inputStack, int count, int size){
   //base condition
   if(count == size/2){
      inputStack.pop();
      return;
   }

   int element = inputStack.top();
   inputStack.pop();

   //recursive call
   solve(inputStack, count + 1, size);
   //back tracking
   inputStack.push(element);

}
void deleteMiddle(stack<int>&inputStack, int N){
	
   // Write your code here
   int count = 0;
   solve(inputStack, count, N);
}