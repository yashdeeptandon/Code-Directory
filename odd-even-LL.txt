class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        /* using extra space -> array
        vector<int> v;
        ListNode *temp = head;
        while(temp != NULL)
        {
            v.push_back(temp->val);
            temp = temp->next;
        }
        temp = head;
        for(int i = 0; i < v.size(); i += 2){
            temp->val = v[i];
            temp = temp->next;
        }
        for(int i = 1; i < v.size(); i += 2){
            temp->val = v[i];
            temp = temp->next;
        }

        return head;
        */
        if(!head || !head->next){
            return head;
        }

        ListNode *odd = head;
        ListNode *even = head->next;
        //maintaining the even head;
        ListNode *evenHead = even;

        while(even != NULL && even->next != NULL){
            //change pointers for odd list
            odd->next = odd->next->next;
            odd = odd->next;
            //change pointers for even list
            even->next = even->next->next;
            even = even->next;
        }
        //assigning even list at he end of off list
        odd->next = evenHead;

        return head;
    }
};